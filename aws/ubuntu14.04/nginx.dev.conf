map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
}

server {
       listen         80;
       server_name    dev.webgme.org www.dev.webgme.org;
       return         301 https://$server_name$request_uri;
}

server {
        server_name dev.webgme.org www.dev.webgme.org;
        listen 443 ssl;
        listen [::]:443 ssl ipv6only=on;

        ssl_certificate      /etc/letsencrypt/live/dev.webgme.org/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/dev.webgme.org/privkey.pem;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;


        root /home/ubuntu/webgme.org/www/static;

        access_log /var/log/nginx/webgme.org-www.access.log;
        error_log /var/log/nginx/webgme.org-www.error.log;

        index index.html index.htm;

        # This block will catch static file requests, such as images, css, js
        # The ?: prefix is a 'non-capturing' mark, meaning we do not require
        # the pattern to be captured into $1 which should help improve performance
        location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
                # Some basic cache-control for static files to be sent to the browser
                expires max;
                add_header Pragma public;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }

        # remove the robots line if you want to use wordpress' virtual robots.txt
        location = /robots.txt  { access_log off; log_not_found off; }
        location = /favicon.ico { access_log off; log_not_found off; }

        # this prevents hidden files (beginning with a period) from being served
        location ~ /\.          { access_log off; log_not_found off; deny all; }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
                deny all;
        }

}

server {
       listen         80;
       server_name    editor.dev.webgme.org;
       return         301 https://$server_name$request_uri;
}


server {
        server_name editor.dev.webgme.org;
        listen 443 ssl;

        ssl_certificate      /etc/letsencrypt/live/dev.webgme.org/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/dev.webgme.org/privkey.pem;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;


        access_log /var/log/nginx/webgme.org-editor.access.log;
        error_log /var/log/nginx/webgme.org-editor.error.log;

        location / {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;

                proxy_pass http://localhost:8001;
                proxy_redirect off;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
        }
}
